name: Databricks CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-and-analyze:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
        pip install -e .

    - name: Run Unit Tests with Coverage
      run: |
        python -m pytest tests/unit/ -v --cov=src --cov-report=xml:coverage.xml

    - name: SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@v1
      env:
        SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONARQUBE_HOST_URL }}
      with:
        args: -Dsonar.projectKey=my-databricks-project -Dsonar.python.coverage.reportPaths=coverage.xml

    - name: SonarQube Quality Gate Check
      uses: SonarSource/sonarqube-quality-gate-action@v1
      timeout-minutes: 5
      env:
        SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}

  deploy-dev:
    needs: test-and-analyze # This job only runs if the test-and-analyze job succeeds
    runs-on: ubuntu-latest
    environment: dev # Links to an environment for rules and secrets
    steps:
      - uses: actions/checkout@v4

      - name: Install Databricks CLI
        run: |
          pip install databricks-cli

      - name: Deploy to Dev Databricks
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_DEV_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_DEV_TOKEN }}
        run: |
          # Upload Notebooks
          databricks workspace import_dir ./notebooks /Shared/my-project --overwrite
          # Deploy Job Configuration
          databricks jobs create --json-file databricks-resources/job_configs/silver_etl_job.json || databricks jobs reset --job-id $(databricks jobs list --output json | jq -r '.jobs[] | select(.settings.name == "Silver_Sales_ETL_Job").job_id') --json-file databricks-resources/job_configs/silver_etl_job.json
